#include <iostream>
#include <fstream>
#define maxn 60001
using namespace std;
int tree[maxn], a[maxn], res, n;
void buildtree()
{
    for (int x = 1; x <= n; x++)
    {
        int par = x & (-x); //nut cha cung cap xa nhat so voi x
        tree[x] = a[x];
        int y = x - 1; //nut con thap nhat cua x
        while (y > par)
        {
            tree[x] += tree[y];
            y -= y & (-y);
        }
    }
}
int getsum(int x)
{
    int sum = 0;
    while (x)
    {
        sum += tree[x];
        x -= x & (-x);
    }
    return sum;
}
void update(int x)
{
    while (x <= maxn)
    {
        tree[x]++;
        x += x & (-x);
    }
}
int main()
{
    freopen("DNT.INP", "r", stdin);
    freopen("DNT.OUT", "w", stdout);
    cin >> n;
    res = 0;
    for (int i = 1; i <= n; i++) cin >> a[i];
    for (int i = n; i >= 1; i--)
    {
        res += getsum(a[i] - 1);
        update(a[i]);
    }
    cout << res;
    return 0;
}
