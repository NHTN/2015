
 
using namespace std;
 
struct matrix
{
    long long val[maxn][maxn];
    matrix()
    {
        memset(val, 0, sizeof(val));
    }
 
    matrix operator * ( const matrix & x)
    {
        matrix res;
        for (int u = 1; u <= 2; u++)
            for (int v = 1; v <= 2; v++)
                for (int i = 1; i <= 2; i++)
                    res.val[u][v] = ((ll)val[u][i] * x.val[i][v] + res.val[u][v] ) % MOD;
        return res;
    }
};
 
matrix A;
long long n, ntest;
 
matrix POWW(matrix A, long long b)
{
    matrix C;
    C.val[1][1] = C.val[2][2] = 1;
    for ( ; b; b /= 2, A = A * A)
        if (b % 2) C = C * A;
    return C;
}
 
int main()
{
	ios_base::sync_with_stdio(0);
    //freopen(Task".inp", "r", stdin);
    //freopen(Task".out", "w", stdout);
    cin >> ntest;
    while (ntest--)
    {
        cin >> n;
        A.val[1][1] = A.val[1][2] = A.val[2][1] = 1;
        A.val[2][2] = 0;
        matrix B = POWW(A, n);
        cout << B.val[1][1] << endl;
    }
    return 0;
}